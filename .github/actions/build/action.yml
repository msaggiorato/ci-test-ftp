name: "Checkout and Build"
description: ""
inputs:
  path:
    description: "Path"
    required: true
  use:
    description: "Commit to build"
    required: false
    default: "current"
  gh_token:
    description: "GH Token to use for checkouts"
    required: false
    default: "${{ github.token }}"
outputs:
  commit-sha:
    description: "Key used for the build path"
    value: ${{ steps.current-sha.outputs.sha }}
runs:
  using: "composite"
  steps:
    - name: Path Setup
      shell: bash
      run: echo "${{ github.action_path }}" >> $GITHUB_PATH

    - name: Read Info
      if: ${{ inputs.use != 'current' }}
      id: read-info
      shell: bash
      run: |
        if [ "${{ inputs.use }}" == "last" ]; then
          if [ -z "$PERSISTENT_LAST_REF" ]; then
            echo "::set-output name=ref::$PERSISTENT_LAST_REF"
          else
            echo "::set-output name=ref::false"
          fi
        else
          echo "::set-output name=ref::${{ inputs.use }}"
        fi

    - name: Checkout Specific Commit
      if: ${{ steps.read-info.outputs.ref != 'false' }}
      uses: actions/checkout@v2
      continue-on-error: true
      with:
        submodules: "recursive"
        ref: ${{ steps.read-info.outputs.ref }}
        token: ${{ inputs.gh_token }}
        path: ${{ inputs.path }}

    - name: Checkout Specific Commit
      if: ${{ inputs.use == 'current' }}
      uses: actions/checkout@v2
      continue-on-error: true
      with:
        submodules: "recursive"
        path: ${{ inputs.path }}

    - name: Create Path
      shell: bash
      run: mkdir -p "${{ inputs.path }}"

    - name: Set SHA Output
      env: 
        USE: ${{ inputs.use }}
        READ_INFO_REF: ${{ steps.read-info.outputs.ref }}
      id: current-sha
      shell: bash
      run: |
        if [ "${USE}" == "last" ]; then
          if [ "${READ_INFO_REF}" != "false" ]; then
            if [ -d "$GITHUB_WORKSPACE/${{ inputs.path }}/.git" ]; then
              echo "::set-output name=sha::${READ_INFO_REF}"
            else
              echo "::set-output name=sha::false"
            fi
          else
            echo "::set-output name=sha::false"
          fi
        elif [ "${USE}" == "current" ]; then
          echo "::set-output name=sha::${GITHUB_SHA}"
        elif [ "${USE}" != "false" ]; then
          echo "::set-output name=sha::${USE}"
        else
          echo "::set-output name=sha::false"
        fi

    - name: Maybe Build And Cleanup
      shell: bash
      env:
        BUILD_DIR: ${{ inputs.path }}
      run: maybe-build.sh
