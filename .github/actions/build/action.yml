name: "Checkout and Build"
description: ""
inputs:
  path:
    description: "Path"
    required: true
  use:
    description: "Commit to build"
    required: false
    default: "current"
  gh_token:
    description: "GH Token to use for checkouts"
    required: false
    default: "${{ github.token }}"
outputs:
  cache-key:
    description: "Key used for the build path"
    value: ${{ steps.cache-key.outputs.key }}
runs:
  using: "composite"
  steps:
    - name: Path Setup
      shell: bash
      run: echo "${{ github.action_path }}" >> $GITHUB_PATH

    - name: Cache Key
      id: cache-key
      shell: bash
      run: |
        cache_hash() {
          local PREFIX;
          PREFIX=${2};
          if [ -n "${PREFIX}" ]; then
            PREFIX="${PREFIX}-"
          fi
          echo -n "${1}" | md5sum | awk -v prefix="${PREFIX}" '{print prefix$1}'
        }
        KEY=$(cache_hash "${{ inputs.path }}" "${{ github.run_number }}")
        echo "::set-output name=key::${KEY}"; # set up cache action with this key on the path

    - name: Cache
      uses: actions/cache@v3
      with:
        path: "${{ inputs.path }}"
        key: ${{ steps.cache-key.outputs.key }}

    - name: Deployment Info
      if: ${{ inputs.use == 'last' }}
      id: deployment-info
      uses: actions/cache@v3
      with:
        path: "$GITHUB_WORKSPACE/deployment-info"
        key: deployment-info

    - name: Read Info
      if: ${{ inputs.use == 'last' }}
      id: read-info
      shell: bash
      run: |
        if [ -f "$GITHUB_WORKSPACE/deployment-info/ref" ]; then
          echo "::set-output name=ref::$(cat deployment-info/ref)"
        else
          echo "::set-output name=ref::false"
        fi

    - name: Checkout Specific Commit
      if: ${{ inputs.use == 'last' && steps.read-info.outputs.ref != 'false' }}
      uses: actions/checkout@v2
      continue-on-error: true
      with:
        submodules: "recursive"
        ref: ${{ steps.read-info.outputs.ref }}
        token: ${{ inputs.gh_token }}
        path: ${{ inputs.path }}

    - name: Checkout Specific Commit
      if: ${{ inputs.use == 'current' }}
      uses: actions/checkout@v2
      continue-on-error: true
      with:
        submodules: "recursive"
        path: ${{ inputs.path }}

    - name: Create Path
      shell: bash
      run: mkdir -p "${{ inputs.path }}"

    - name: Maybe Build Source
      shell: bash
      run: |
        cd "${{ inputs.path }}";
        if [ -f "${{ inputs.path }}/.github/build-for-deployment.sh" ]; then
          echo "Running code specific build script"
          bash "${{ inputs.path }}/.github/build-for-deployment.sh"
        else
          echo "Running default build script"
          build-for-deployment.sh
        fi

    - name: Cleanup
      shell: bash
      run: |
        rmFind() {
          find "${1}" -type d -name "${2}" | while read DIR_TO_REMOVE; do
            echo "Removing ${DIR_TO_REMOVE}"
            rm -rf "${DIR_TO_REMOVE}"
          done
        }
        rmFind "${{ inputs.path }}" ".git"
        rmFind "${{ inputs.path }}" ".github"
        rmFind "${{ inputs.path }}" "node_modules"
        rm -rf "${GITHUB_WORKSPACE}/${{ inputs.path }}/vendor"
