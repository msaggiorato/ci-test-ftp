name: "Compare and Deploy"
description: ""
inputs:
  source:
    description: "Source folder (already built)"
    required: true
  source-key:
    description: "Source cache key to restore from"
    required: false
    default: 'false'
  target:
    description: "Target folder (already built)"
    required: true
  target-key:
    description: "Target cache key to restore from"
    required: false
    default: 'false'
  target-sha:
    description: "SHA to set deployment info to in case of success"
    required: true
  env-type:
    description: "Env Type"
    required: false
    default: 'sftp'
  env-host:
    description: "Env Host"
    required: true
    default: ''
  env-port:
    description: "Env Port"
    required: true
    default: ''
  env-user:
    description: "Env User"
    required: true
    default: ''
  env-pass:
    description: "Env Password"
    required: true
    default: ''
  env-remote-root:
    description: "Env Remote Root"
    required: true
    default: ''
  env-local-root:
    description: "Env Local Root"
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: Path Setup
      shell: bash
      run: echo "${{ github.action_path }}" >> $GITHUB_PATH

    - name: Cache Target
      if: ${{ inputs.source-key != 'false' }}
      uses: actions/cache@v3
      with:
        path: "${{ inputs.source }}"
        key: ${{ inputs.source-key }}

    - name: Cache Target
      if: ${{ inputs.target-key != 'false' }}
      uses: actions/cache@v3
      with:
        path: "${{ inputs.target }}"
        key: ${{ inputs.target-key }}

    - name: Compare
      shell: bash
      run: build-sftp.sh "${{ inputs.source }}" "${{ inputs.target }}" "deploy.manifest";

    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Deploy
      shell: bash
      run: |
        npm i -g saucal/ftp-deployment
        ftp-deployment-cli --type="${{ inputs.env-type }}" --host="${{ inputs.env-host }}" --port="${{ inputs.env-port }}" --user="${{ inputs.env-user }}" --pass="${{ inputs.env-pass }}" --remote-root="${{ inputs.env-remote-root }}" --local-root="${{ inputs.target }}" "deploy.manifest"

    - name: Deployment Info
      id: deployment-info
      uses: actions/cache@v3
      with:
        path: "deployment-info"
        key: deployment-info

    - name: Set Deployment Info
      shell: bash
      run: |
        mkdir -p "$GITHUB_WORKSPACE/deployment-info"
        echo "${{ inputs.target-sha }}" > deployment-info/ref
